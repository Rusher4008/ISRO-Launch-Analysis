dataset <- read.csv("ISRO mission launches.csv", stringsAsFactors = FALSE)
head(dataset)
dataset_clean <- dataset[!is.na(dataset$Orbit.Type) & dataset$Orbit.Type != "" & !is.na(dataset$Remarks) & dataset$Remarks != "", ]
dataset_clean <- dataset_clean[dataset_clean$Orbit.Type %in% c("Lunar", "SSPO (Sun Synchronous Polar Orbit)"), ]
dataset_subset <- dataset_clean[, c("Orbit.Type", "Remarks")]
filtered_dataset$Remarks <- ifelse(filtered_dataset$Remarks == "Launch successful", 1, 0)
summary(dataset_subset)
head(dataset_subset)
total_rows <- nrow(dataset_subset)
dataset <- read.csv("ISRO mission launches.csv", stringsAsFactors = FALSE)
head(dataset)
dataset_clean <- dataset[!is.na(dataset$Orbit.Type) & dataset$Orbit.Type != "" & !is.na(dataset$Remarks) & dataset$Remarks != "", ]
dataset_clean <- dataset_clean[dataset_clean$Orbit.Type %in% c("Lunar", "SSPO (Sun Synchronous Polar Orbit)"), ]
dataset_subset <- dataset_clean[, c("Orbit.Type", "Remarks")]
filtered_dataset$Remarks <- ifelse(filtered_dataset$Remarks == "Launch successful", 1, 0)
dataset <- read.csv("ISRO mission launches.csv", stringsAsFactors = FALSE)
head(dataset)
dataset_clean <- dataset[!is.na(dataset$Orbit.Type) & dataset$Orbit.Type != "" & !is.na(dataset$Remarks) & dataset$Remarks != "", ]
dataset_clean <- dataset_clean[dataset_clean$Orbit.Type %in% c("Lunar", "SSPO (Sun Synchronous Polar Orbit)"), ]
filtered_dataset$Remarks <- ifelse(filtered_dataset$Remarks == "Launch successful", 1, 0)
dataset <- read.csv("ISRO mission launches.csv", stringsAsFactors = FALSE)
head(dataset)
dataset_clean <- dataset[!is.na(dataset$Orbit.Type) & dataset$Orbit.Type != "" & !is.na(dataset$Remarks) & dataset$Remarks != "", ]
dataset_clean <- dataset_clean[dataset_clean$Orbit.Type %in% c("Lunar", "SSPO (Sun Synchronous Polar Orbit)"), ]
dataset_clean$Remarks <- ifelse(dataset_clean$Remarks == "Launch successful", 1, 0)
dataset_subset <- dataset_clean[, c("Orbit.Type", "Remarks")]
summary(dataset_subset)
head(dataset_subset)
total_rows <- nrow(dataset_subset)
print(paste("The cleaned dataset contains", total_rows, "rows."))
dataset <- read.csv("Cleaned_ISRO_Dataset.csv", stringsAsFactors = FALSE)
# Check structure of the dataset
str(filtered_dataset)
# View unique values in Remarks
unique(filtered_dataset$Remarks)
write.csv(dataset_subset, "Cleaned_ISRO_Dataset.csv", row.names = FALSE)
dataset <- read.csv("Cleaned_ISRO_Dataset.csv", stringsAsFactors = FALSE)
# Check structure of the dataset
str(filtered_dataset)
# View unique values in Remarks
unique(filtered_dataset$Remarks)
filtered_dataset$Remarks <- ifelse(filtered_dataset$Remarks == "Launch successful", 1, 0)
# Check unique values again
unique(filtered_dataset$Remarks)
# Confirm numeric data type
str(filtered_dataset)
# Install if not already installed
install.packages("ggplot2")
install.packages("dplyr")
install.packages("plotly")
# Load the libraries
library(ggplot2)
library(dplyr)
library(plotly)
success_rates <- filtered_dataset %>%
group_by(Orbit.Type) %>%
summarize(Success.Rate = mean(Remarks, na.rm = TRUE)) # Ensure NA values are ignored
dataset <- read.csv("Cleaned_ISRO_Dataset.csv", stringsAsFactors = FALSE)
success_rates <- filtered_dataset %>%
group_by(Orbit.Type) %>%
summarize(Success.Rate = mean(Remarks, na.rm = TRUE)) # Ensure NA values are ignored
dataset <- read.csv("Cleaned_ISRO_Dataset.csv", stringsAsFactors = FALSE)
# Check structure of the dataset
str(filtered_dataset)
filtered_dataset$Remarks <- ifelse(filtered_dataset$Remarks == "Launch successful", 1, 0)
filtered_dataset$Remarks <- ifelse(filtered_dataset$Remarks == "Launch successful", 1, 0)
filtered_dataset$Remarks <- ifelse(filtered_dataset$Remarks == "Launch successful", 1, 0)
filtered_dataset$Remarks <- ifelse(filtered_dataset$Remarks == "Launch successful", 1, 0)
v
dataset <- read.csv("Cleaned_ISRO_Dataset.csv", stringsAsFactors = FALSE)
filtered_dataset <- dataset[dataset$Orbit.Type %in% c("Lunar", "SSPO (Sun Synchronous Polar Orbit)"), ]
# Remove rows with missing or invalid `Remarks`
filtered_dataset <- filtered_dataset[!is.na(filtered_dataset$Remarks) & filtered_dataset$Remarks != "", ]
# Preview the filtered dataset
head(filtered_dataset)
# Check structure of the dataset
str(filtered_dataset)
# View unique values in Remarks
unique(filtered_dataset$Remarks)
filtered_dataset$Remarks <- ifelse(filtered_dataset$Remarks == "Launch successful", 1, 0)
# Check unique values again
unique(filtered_dataset$Remarks)
# Confirm numeric data type
str(filtered_dataset)
dataset <- read.csv("Cleaned_ISRO_Dataset.csv", stringsAsFactors = FALSE)
filtered_dataset <- dataset[dataset$Orbit.Type %in% c("Lunar", "SSPO (Sun Synchronous Polar Orbit)"), ]
# Remove rows with missing or invalid `Remarks`
filtered_dataset <- filtered_dataset[!is.na(filtered_dataset$Remarks) & filtered_dataset$Remarks != "", ]
# Preview the filtered dataset
head(filtered_dataset)
# Check structure of the dataset
str(filtered_dataset)
# View unique values in Remarks
unique(filtered_dataset$Remarks)
success_rates <- filtered_dataset %>%
group_by(Orbit.Type) %>%
summarize(Success.Rate = mean(Remarks, na.rm = TRUE)) # Ensure NA values are ignored
dataset <- read.csv("Cleaned_ISRO_Dataset.csv", stringsAsFactors = FALSE)
filtered_dataset <- dataset[dataset$Orbit.Type %in% c("Lunar", "SSPO (Sun Synchronous Polar Orbit)"), ]
# Remove rows with missing or invalid `Remarks`
filtered_dataset <- filtered_dataset[!is.na(filtered_dataset$Remarks) & filtered_dataset$Remarks != "", ]
# Preview the filtered dataset
head(filtered_dataset)
# Check structure of the dataset
str(filtered_dataset)
# View unique values in Remarks
unique(filtered_dataset$Remarks)
# Install if not already installed
install.packages("ggplot2")
install.packages("dplyr")
install.packages("plotly")
# Load the libraries
library(ggplot2)
library(dplyr)
library(plotly)
success_rates <- filtered_dataset %>%
group_by(Orbit.Type) %>%
summarize(Success.Rate = mean(Remarks, na.rm = TRUE)) # Ensure NA values are ignored
print(success_rates)
# Create the bar plot
ggplot(success_rates, aes(x = Orbit.Type, y = Success.Rate, fill = Orbit.Type)) +
geom_bar(stat = "identity") +
labs(title = "Success Rates Across Orbit Types", x = "Orbit Type", y = "Success Rate") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate x-axis labels for better readability
